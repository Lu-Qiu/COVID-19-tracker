print(a)
shiny::runApp('C:/Users/呆璐/Desktop/shiny/covid19 dashboard')
runApp('C:/Users/呆璐/Desktop/shiny/covid19 dashboard')
runApp('C:/Users/呆璐/Desktop/shiny/covid19 dashboard')
a
head(a)
runApp('C:/Users/呆璐/Desktop/shiny/covid19 dashboard')
a <- a[order(a$country_confirmedCount, decreasing= T),]
AsiaData <- AsiaData[order(AsiaData$country_confirmedCount, decreasing= T),]
EuropeData <- EuropeData[order(EuropeData$country_confirmedCount, decreasing= T),]
NorthAmericaData<- NorthAmericaData[order(NorthAmericaData$country_confirmedCount, decreasing= T),]
SouthAmericaData <- SouthAmericaData[order(SouthAmericaData$country_confirmedCount, decreasing= T),]
AfricaData <- AfricaData[order(AfricaData$country_confirmedCount, decreasing= T),]
OceaniaData <- OceaniaData[order(OceaniaData$country_confirmedCount, decreasing= T),]
runApp('C:/Users/呆璐/Desktop/shiny/covid19 dashboard')
runApp('C:/Users/呆璐/Desktop/shiny/covid19 dashboard')
runApp('C:/Users/呆璐/Desktop/shiny/covid19 dashboard')
runApp('C:/Users/呆璐/Desktop/shiny/covid19 dashboard')
runApp('C:/Users/呆璐/Desktop/shiny/covid19 dashboard')
runApp('C:/Users/呆璐/Desktop/shiny/covid19 dashboard')
runApp('C:/Users/呆璐/Desktop/shiny/covid19 dashboard')
runApp('C:/Users/呆璐/Desktop/shiny/covid19 dashboard')
runApp('C:/Users/呆璐/Desktop/shiny/covid19 dashboard')
runApp('C:/Users/呆璐/Desktop/shiny/covid19 dashboard')
runApp('C:/Users/呆璐/Desktop/shiny/covid19 dashboard')
runApp('C:/Users/呆璐/Desktop/shiny/covid19 dashboard')
runApp('C:/Users/呆璐/Desktop/shiny/covid19 dashboard')
runApp('C:/Users/呆璐/Desktop/shiny/covid19 dashboard')
runApp('C:/Users/呆璐/Desktop/shiny/covid19 dashboard')
runApp('C:/Users/呆璐/Desktop/shiny/covid19 dashboard')
runApp('C:/Users/呆璐/Desktop/shiny/covid19 dashboard')
runApp('C:/Users/呆璐/Desktop/shiny/covid19 dashboard')
runApp('C:/Users/呆璐/Desktop/shiny/covid19 dashboard')
runApp('C:/Users/呆璐/Desktop/shiny/covid19 dashboard')
runApp('C:/Users/呆璐/Desktop/shiny/covid19 dashboard')
runApp('C:/Users/呆璐/Desktop/shiny/covid19 dashboard')
runApp('C:/Users/呆璐/Desktop/shiny/covid19 dashboard')
install.packages("cowplot")
runApp('C:/Users/呆璐/Desktop/shiny/covid19 dashboard')
runApp('C:/Users/呆璐/Desktop/shiny/covid19 dashboard')
runApp('C:/Users/呆璐/Desktop/shiny/covid19 dashboard')
runApp('C:/Users/呆璐/Desktop/shiny/covid19 dashboard')
runApp('C:/Users/呆璐/Desktop/shiny/covid19 dashboard')
install.packages("borders")
runApp('C:/Users/呆璐/Desktop/shiny/covid19 dashboard')
runApp('C:/Users/呆璐/Desktop/shiny/covid19 dashboard')
runApp('C:/Users/呆璐/Desktop/shiny/covid19 dashboard')
shiny::runApp()
install.packages("mapproj")
runApp()
install.packages("mptools")
install.packages("maptools")
install.packages("ggmap")
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
install.packages("baidumap")
install.packages("leaflet")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
a <- read.csv('C:/Users/呆璐/Desktop/05-25-2021.csv', stringsAsFactors = FALSE )
a
a <- read.csv('C:/Users/呆璐/Desktop/123.csv',1)
a
b <- read.csv('C:/Users/呆璐/Desktop/05-25-2021.csv', stringsAsFactors = FALSE )
b
map_data <- read.csv('C:/Users/呆璐/Desktop/05-25-2021.csv', stringsAsFactors = FALSE )
map_data
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
a
head(a)
a
a <- a[order(a$country_confirmedCount, decreasing= T),]
a
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
map_data
runApp()
runApp()
map_data <- data.frame(map_data)
map_data$Lat <-  as.numeric(map_data$Lat)
map_data$Long <-  as.numeric(map_data$Long)
map_data=filter(map_data, Lat != "NA")
map_data$Lat <-  as.numeric(map_data$Lat)
runApp()
runApp()
map_data <- read.csv('C:/Users/呆璐/Desktop/05-25-2021.csv', stringsAsFactors = FALSE )
runApp()
map_data <- read.csv('C:/Users/呆璐/Desktop/05-25-2021.csv', stringsAsFactors = FALSE )
map_data
shiny::runApp()
map_data <- read.csv('C:/Users/呆璐/Desktop/05-25-2021.csv', stringsAsFactors = FALSE )
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
map_data
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
map_data <- read.csv('C:/Users/呆璐/Desktop/06-01-2021.csv', stringsAsFactors = FALSE )
runApp()
map_data <- read.csv('C:/Users/呆璐/Desktop/06-01-2021.csv', stringsAsFactors = FALSE )
map_data
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
map_data <- read.csv('C:/Users/呆璐/Desktop/06-01-2021.csv', stringsAsFactors = FALSE )
shiny::runApp()
map_data <- read.csv('C:/Users/呆璐/Desktop/06-01-2021.csv', stringsAsFactors = FALSE )
runApp()
map_data <- read.csv('C:/Users/呆璐/Desktop/06-01-2021.csv', stringsAsFactors = FALSE )
shiny::runApp()
map_data <- read.csv('C:/Users/呆璐/Desktop/06-01-2021.csv', stringsAsFactors = FALSE )
shiny::runApp()
shiny::runApp()
map_data <- read.csv('C:/Users/呆璐/Desktop/06-01-2021.csv', stringsAsFactors = FALSE )
shiny::runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
runApp()
data
shiny::runApp()
confirmed<- 'https://raw.githubusercontent.com/Lu-Qiu/COVID-20/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv'
confirmed_data <- read.csv(time_series,header =T)
confirmed_data <- time_series_data[,c(1,2,3,4,ncol(time_series_data))]
confirmed<- 'https://raw.githubusercontent.com/Lu-Qiu/COVID-20/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv'
confirmed_data <- read.csv(confirmed,header =T)
confirmed_data <-confirmed_data[,c(1,2,3,4,ncol(confirmed_data))]
confirmed_data <- read.csv(confirmed,header =T)
View(confirmed_data)
confirmed_data <-confirmed_data[,c(1,2,3,4,ncol(confirmed_data))]
View(confirmed_data)
View(map_data)
View(a)
View(map_data)
confirmed<- 'https://raw.githubusercontent.com/Lu-Qiu/COVID-20/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv'
confirmed_data <- read.csv(confirmed,header =T)
confirmed_data <-confirmed_data[,c(1,2,3,4,ncol(confirmed_data))]
View(confirmed_data)
colnames(confirmed_data)[5] <- 'confirmed'
colnames(confirmed_data)[5] <- 'Confirmed'
death <- 'https://github.com/Lu-Qiu/COVID-20/blob/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_deaths_global.csv'
death_data <- read.csv(death,header = T)
View(death_data)
death <- 'https://raw.githubusercontent.com/Lu-Qiu/COVID-20/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_deaths_global.csv'
death_data <- read.csv(death,header = T)
View(death_data)
death_data <-death_data[,c(1,2,3,4,ncol(death_data))]
View(death_data)
colnames(death_data)[5] <- 'Death'
recovered <- 'https://raw.githubusercontent.com/Lu-Qiu/COVID-20/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_recovered_global.csv'
recovered_data <- read.csv(recovered,header=T)
recovered_data <-recovered_data[,c(1,2,3,4,ncol(recovered_data))]
View(recovered_data)
colnames(recovere_data)[5] <- 'Recovered'
colnames(recovered_data)[5] <- 'Recovered'
View(recovered_data)
data_merge<- merge(confirmed_data,death_data,by.y='Lat',all=FALSE)
data_merge<- merge(confirmed_data,death_data,by.x='Lat',all=FALSE)
data_merge<- merge(confirmed_data,death_data,by.y='Long',all=FALSE)
data_merge<- merge(confirmed_data,death_data,all=FALSE)
View(data_merge)
confirmed_US <- 'https://raw.githubusercontent.com/Lu-Qiu/COVID-20/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_US.csv'
confirmed_US <- 'https://raw.githubusercontent.com/Lu-Qiu/COVID-20/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_US.csv'
confirmed_US_data <- read.csv(confirmed_US,header = T)
View(confirmed_US_data)
confirmed_US_data <-confirmed_US_data[,c(7,8,9,10,ncol(confirmed_US_data))]
colnames(confirmed_US_data)[5] <- 'Confirmed'
confirmed_global_data <- rbind(confirmed_data,confirmed_US_data)
colnames(confirmed_US_data) <- c('Province.State','Country.Region','Lat','Long','Confirmed')
View(confirmed_US_data)
confirmed_global_data <- rbind(confirmed_data,confirmed_US_data)
View(confirmed_global_data)
rm(recovered_data)
death_US <- 'https://raw.githubusercontent.com/Lu-Qiu/COVID-20/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_deaths_US.csv'
death_US_data <- read.csv(death_US,header = T)
View(death_US_data)
death_US_data <-death_US_data[,c(7,8,9,10,ncol(death_US_data))]
colnames(confirmed_US_data) <- c('Province.State','Country.Region','Lat','Long','Death')
colnames(confirmed_US_data) <- c('Province.State','Country.Region','Lat','Long','Confirmed')
colnames(death_US_data) <- c('Province.State','Country.Region','Lat','Long','Death')
confirmed_global_data <- rbind(death_data,death_US_data)
confirmed_global_data <- rbind(confirmed_data,confirmed_US_data)
death_global_data <- rbind(death_data,death_US_data)
View(death_global_data)
View(confirmed_US_data)
global_data <- cbind(confirmed_global_data,death_global_data)
View(global_data)
global_data <- merge(confirmed_global_data,death_global_data)
View(global_data)
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
shiny::runApp()
View(death_US_data)
View(confirmed_data)
global_data <- merge(confirmed_global_data,death_global_data)
View(global_data)
runApp()
View(a)
View(a)
comfirmed_top <- head(sort(global_data$Confirmed, decreasing=TRUE), 5)
confirmed_top
confirmed_decreasing <- global_data[order(global_data$Confirmed,decreasing=TRUE), ]
View(confirmed_decreasing)
confirmed_decreasing <- head(global_data[order(global_data$Confirmed,decreasing=TRUE), ] )
View(confirmed_decreasing)
confirmed_decreasing <- head(global_data[order(global_data$Confirmed,decreasing=TRUE), ],10 )
View(confirmed_decreasing)
rm(confirmed_US)
rm(confirmed_US_data)
rm(death_US)
rm(death_US_data)
rm(EuropeData)
rm(AsiaData)
rm(NorthAmericaData)
rm(SouthAmericaData)
rm(OceaniaData)
rm(map_data)
rm(a)
rm(b)
rm(AfricaData)
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
##Source of Code
https://github.com/CSSEGISandData/COVID-19/tree/master/csse_covid_19_data/csse_covid_19_time_series
runApp()
##Source of code
All the data used in this shiny app comes from Johns Hopkins Center for Systems Science and Engineering github page:https://github.com/CSSEGISandData/COVID-19/tree/master/csse_covid_19_data/csse_covid_19_time_series
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
shiny::runApp()
class(input$time_series_slider)
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
shiny::runApp()
reactive()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
